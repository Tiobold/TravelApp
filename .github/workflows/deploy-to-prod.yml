name: Deploy to PROD
on:
  workflow_dispatch:
  push:
    paths:
      - force-app/**
    branches:
      - main
jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      # Install Salesforce CLI using npm instead of the tar.xz file
      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf --version
          
      - name: Populate auth file with SFDX_URL secret of target org
        run: |
          echo ${{ secrets.SF_DEV_ORG}} > ./SF_DEV_ORG.txt
          
      - name: Authenticate to target Org
        run: sf auth:sfdxurl:store -f ./SF_DEV_ORG.txt -s -a targetOrg
        
      - name: Installing sfdx git delta
        run: |
          echo y | sf plugins:install sfdx-git-delta
          sf plugins
          
      - name: Create delta packages for new, modified or deleted metadata
        run: >
          mkdir changed-sources

          sf sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/ 
          
      - name: Installing java
        run: sudo apt-get update && sudo apt-get install default-jdk
        
      # Use npm to install the scanner instead of the plugin system
      - name: Installing SFDX scanner
        run: npm install -g @salesforce/sfdx-scanner
        
      - name: Scan code
        run: sf scanner:run --format sarif --target 'changed-sources/**/*.cls'
          --category 'Design,Best Practices,Performance,Code Style,Security'
          --outfile 'apexScanResults.sarif'
          
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: apexScanResults.sarif
          
      - name: Deployment - run all tests
        run: >
          sf force:source:deploy -p "changed-sources/force-app"  --testlevel
          RunLocalTests --json